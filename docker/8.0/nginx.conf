events {

}

http {
    error_log /etc/nginx/error_log.log warn;
    client_max_body_size 20m;

    proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    upstream docker-web {
        server web:80;
    }


    server {
        listen [::]:80;
        listen 80;

        server_name kingmakerd.com www.kingmakerd.com;

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }

        # redirect http to https www
        # return 301 https://kingmakerd.com$request_uri;
    }



    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name kingmakerd.com;

        # SSL code
        ssl_certificate /etc/nginx/ssl/server.pem;
        ssl_certificate_key /etc/nginx/ssl/private_key.pem;
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

        root /var/www/html;
        index index.html;


        location / {
           set $suffix "";

            if ($uri = /index.php) {
                set $suffix ?$query_string;
            }

            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Scheme $scheme;
            proxy_set_header SERVER_PORT $server_port;
            proxy_set_header REMOTE_ADDR $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass http://docker-web$suffix;
        }
    }
}
