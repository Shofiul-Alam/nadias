# For more information: https://laravel.com/docs/sail
version: '3'
services:
  laravel.test:
    build:
      context: ./docker/8.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-8.0/app
    ports:
      - "88:80"
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - '.:/var/www/html'
      - './docker/8.0/php.ini:/etc/php/8.0/cli/conf.d/99-sail.ini'
    networks:
      sail:
        aliases:
          - web
    depends_on:
      - mysql
      - redis
  #      - selenium
  laravel.websockets:
    build:
      context: ./docker/8.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-8.0/app
    command:
      - /bin/bash
      - -c
      - supervisord -c /etc/supervisor/conf.d/laravel-worker.conf && supervisorctl  start all
    ports:
      - "6001:6001"
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - '.:/var/www/html'
      - './docker/8.0/php.ini:/etc/php/8.0/cli/conf.d/99-sail.ini'
      - './docker/8.0/laravel-worker.conf:/etc/supervisor/conf.d/laravel-worker.conf'
    networks:
      sail:
        aliases:
          - websockets
    depends_on:
      - laravel.test
      - mysql
      - redis
  laravel.cron:
    build:
      context: ./docker/8.0
      dockerfile: DockerCronfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: cron/app
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - '.:/var/www/html'
      - './docker/8.0/php.ini:/etc/php/8.0/cli/conf.d/99-sail.ini'
    networks:
      sail:
        aliases:
          - cron
    depends_on:
      - laravel.test
      - mysql
      - redis
  nginx:
    image: nginx:latest
    container_name: production_nginx
    volumes:
      - ./docker/8.0/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/8.0/nginx:/var/www/html
      - ./docker/8.0/nginx:/etc/nginx
      - ./docker/8.0/nginx/cache/:/etc/nginx/cache
      - ./docker/8.0/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/8.0/nginx/certbot/conf:/etc/nginx/ssl
      - ./docker/8.0/nginx/certbot/data:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    networks:
      sail:
        aliases:
          - nginx
    depends_on:
      - laravel.test
    certbot:
      image: certbot/certbot:latest
      command: certonly --webroot --webroot-path=/var/www/certbot --email shofi.tafe@gmail.com --agree-tos --no-eff-email -d ambassadors.kingmaker.ninja
      volumes:
        - ./docker/8.0/nginx/certbot/conf:/etc/letsencrypt
        - ./certbot/logs:/var/log/letsencrypt
        - ./docker/8.0/nginx/certbot/data:/var/www/certbot
      depends_on:
        - nginx
  mysql:
    image: 'mysql:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    volumes:
      - 'database:/var/lib/mysql'
      - './docker/8.0/mysql.conf/app.cnf:/etc/mysql/conf.d/krost.cnf'
      - './database/seeders/data:/var/lib/mysql/dbdata'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    command: --sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
    networks:
      - sail
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
  mongo:
    image: mongo
    restart: always
    ports:
      - '${FORWARD_REDIS_PORT:-27017}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: kingmaker
    volumes:
      - 'sailmongo:/data/db'
      - './docker/mongo/db:/var/lib/mongodb'
      - './docker/mongo/conf/mongod.conf:/etc/mongod.conf'
    networks:
      - sail
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sailredis:/data'
    networks:
      - sail
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
networks:
  sail:
    driver: bridge
volumes:
  database:
    driver: local
  sailmongo:
    driver: local
  sailredis:
    driver: local
  sailmeilisearch:
    driver: local
